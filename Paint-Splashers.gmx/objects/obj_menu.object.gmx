<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_index = 0;
current_select = -1;
col1 = c_black;
col2 = c_black;
col3 = c_black;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//start
if (point_in_rectangle(mouse_x,mouse_y,0,room_height - (room_height / 3.5),room_width,(room_height - (room_height / 3.5)) + 20)) {
 current_select = 0;

} else if (point_in_rectangle(mouse_x,mouse_y,0,room_height - (room_height / 4),room_width,(room_height - (room_height / 4)) + 20)) {
 current_select = 1;
} else if (point_in_rectangle(mouse_x,mouse_y,0,room_height - (room_height / 4.8),room_width,(room_height - (room_height / 4.8)) + 20)) {
 current_select = 2;
} else {
 current_select = -1;
}

if (mouse_check_button_pressed(mb_left) &amp;&amp; current_select != -1 &amp;&amp; menu_index != 1) {
 switch (current_select) {
  case 0:
  if (instance_exists(obj_game)) {
  with (obj_game) {
   if (surface_exists(surf)) {
    surface_set_target(surf);
    draw_clear_alpha(c_white,0);
    surface_reset_target();
   }
  }
 }
 global.playerscore[colors.red] = 0;
 global.playerscore[colors.blue] = 0;

 var newroom = choose(room_alley,room_ware,room_lobby,room_crates,room_peek,room_halls,room_center,room_madness);
 newroom = choose(room_alley,room_ware,room_lobby,room_crates,room_peek,room_halls,room_center,room_madness);
 room_goto(newroom);
 break;
 case 1:
 menu_index = 1;
 break;
 case 2:
 game_end();
 break;
 }
}

if (keyboard_check_pressed(vk_enter) &amp;&amp; menu_index = 1) {
 menu_index = 0;
}


if (current_select = 0) {
 col1 = c_white;
} else {
col1 = c_black;
}

if (current_select = 1) {
 col2 = c_white;
} else {
col2 = c_black;
}

if (current_select = 2) {
 col3 = c_white;
} else {
col3 = c_black;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (menu_index = 0) {
draw_sprite(spr_logo, 0, room_width / 2, room_height / 3);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text_colour((room_width / 2) + 2, (room_height - (room_height / 3.5)) + 2,"Start Game",col1,col1,col1,col1,1);
draw_text_colour(room_width / 2, room_height - (room_height / 3.5),"Start Game",c_aqua,c_aqua,c_aqua,c_aqua,1);
draw_text_colour((room_width / 2) + 2, (room_height - (room_height / 4)) + 2,"Controls",col2,col2,col2,col2,1);
draw_text_colour(room_width / 2, room_height - (room_height / 4),"Controls",c_red,c_red,c_red,c_red,1);
draw_text_colour((room_width / 2) + 2, (room_height - (room_height / 4.8)) + 2,"&lt;Esc&gt; Exit",col3,col3,col3,col3,1);
draw_text_colour(room_width / 2, room_height - (room_height / 4.8),"&lt;Esc&gt; Exit",c_yellow,c_yellow,c_yellow,c_yellow,1);
} else if (menu_index = 1) {
 draw_sprite(spr_instructions,0,0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
