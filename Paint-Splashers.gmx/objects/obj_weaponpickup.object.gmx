<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_weapons</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time_respawn = room_speed * 4;
time_tick = 0;
current_weapon = weapons.none;
amount = 0;
goback = false;
weapon_bob = 0;
weapon_bob_target = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_weapon = weapons.none) {
if time_tick &gt; -1 {
    if time_tick&gt;=time_respawn{
        var randomnum = irandom_range(0,60);
        if (randomnum &gt;= 0 &amp;&amp; randomnum &lt;= 20) {
         current_weapon = weapons.assault;
        } else if (randomnum &gt; 20 &amp;&amp; randomnum &lt;= 40) {
         current_weapon = weapons.blaster;
        } else if (randomnum &gt; 40 &amp;&amp; randomnum &lt;= 50) {
         current_weapon = weapons.rocket;
        } else if (randomnum &gt; 50 &amp;&amp; randomnum &lt;= 60) {
         current_weapon = weapons.minigun;
        }
        time_tick = 0;
    }else time_tick++;
}
}

if (goback = false) {
amount += 0.01;
if (amount &gt; 0.9) goback = true;
} else if (goback = true) {
 amount -= 0.01;
if (amount &lt; 0.1) goback = false;
}

weapon_bob = lerp(weapon_bob, weapon_bob_target, 0.4);

if (weapon_bob = weapon_bob_target) {
 if (weapon_bob_target = 25) {
  weapon_bob_target = -25;
 } else {
  weapon_bob_target = 25;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_weapon != weapons.none) {
 switch (current_weapon) {
 case weapons.blaster:
 other.current_weapon = weapons.blaster;
 other.ammo = 8;
 audio_play_sound(snd_weaponget, 1, false);
 var pop = instance_create(other.x,other.y, obj_weaponpopup);
 pop.weapon = "Blaster";
 current_weapon = weapons.none;
 
 break;
 case weapons.assault:
 other.current_weapon = weapons.assault;
 other.ammo = 40;
 audio_play_sound(snd_weaponget, 1, false);
  var pop = instance_create(other.x,other.y, obj_weaponpopup);
 pop.weapon = "Assault";
 current_weapon = weapons.none;
 break;
 case weapons.rocket:
 other.current_weapon = weapons.rocket;
 other.ammo = 15;
 audio_play_sound(snd_weaponget, 1, false);
  var pop = instance_create(other.x,other.y, obj_weaponpopup);
 pop.weapon = "Rifle";
 current_weapon = weapons.none;
 break;
 case weapons.minigun:
 other.current_weapon = weapons.minigun;
 other.ammo = 80;
 audio_play_sound(snd_weaponget, 1, false);
  var pop = instance_create(other.x,other.y, obj_weaponpopup);
 pop.weapon = "Minigun";
 current_weapon = weapons.none;
 break;
 }
 

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_circle_colour(x,y,25,merge_colour(c_aqua,c_red,amount), merge_colour(c_aqua,c_red,amount), false);
draw_sprite_ext(spr_weapons, current_weapon,x,y,1,1,weapon_bob,merge_colour(c_red,c_aqua,amount),1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
